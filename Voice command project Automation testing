"""
pyttsx3 = python text to speech
speech_recognition = used to convert spoken words into text and work on API'S
automate_wikipedia = used to automate and work with the wikipedia
webbrowser = used for to automate webbrowsers
smtplib = sending emails
os = used to work / interact with operating system
date time = used to work with the date and time
"""

import pyttsx3
import speech_recognition as sr
import datetime
import wikipedia
import webbrowser
import os
import smtplib

engine = pyttsx3.init ('sapi5')
voices = engine.getProperty('voices')
engine.setProperty('voice', voices[1].id)

def speak(audio):
    engine.say(audio)
    engine.runAndWait()

def wishme():
    hour = int (datetime.datetime.now().hour)
    """
    12:00 - noon
    1:00pm - morning / 13:00 - after noon
    18.:00 - evening
    """
    if hour >=0 and hour<=12:
        speak("good morning my dear friend")
    elif hour>=12 and hour<18:
        speak("good afternoon my dear friend")
    else:
        speak("good evening my dear friend")
    speak("let me know how can i help you, what are you looking for?")
def takecommand():
    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("listening to you ajay...")
        r.pause_threshold = 1
        audio = r.listen(source)
    try:
        print("recognizing your voice...")
        query = r.recognize_google_cloud(audio, language = "en-in")
        print(f"my dear friend you said:{query}\n")
    except Exception as e:
        print("ajay say that again please...")
        return "none"
    return query
def sendEmail(to,Contnt):
    server = smtplib.SMTP('smtp.gmail.com', 587)
    server.ehlo()
    server.starttls()
    server.login("ajaysai119@gmail.com","ajaydurga118@M")
    server.sendmail("ajaysai119@gmail.com",to, content)
    server.close()

if __name__=='__main__':
    wishme()
    while True:
        query = takecommand().lower()
        if 'open wikipedia' in query:
            speak('searching wikipedia...')
            query = query.replace("wikipedia", "")
            result = wikipedia.summary(query,sentences=2)
            speak("according to wikipedia")
            print(result)
            speak(result)
        if 'open notepad' in query:
            npath = "C:\\Windows\\System32\\notepad.exe"
            os.startfile(npath)
        elif 'open paint' in query:
            npath = "C:\\Windows\\System32\\MSpaint.exe"
            os.startfile(npath)
        elif 'open youtube' in query:
            webbrowser.open("www.youtube.com")
        elif 'open great learning academy' in query:
            webbrowser.open("https://www.mygreatlearning.com/academy")
        elif 'open google' in query:
            webbrowser.open("www.google.com")
        elif 'tell me the time' in query:
            strTime = datetime.datetime.now().strftime("%H:%M:%S")
            speak(f"my dear friend, the time is {strTime}")
        elif 'open great learning youtube channel' in query:
            webbrowser.open("https://www.youtube.com//@greatlearning")
        elif 'open linkedin' in query:
            webbrowser.open("www.linkedin.com")
        elif 'email to other friend' in query:
            try:
                speak("what should I send?")
                content = takecommand()
                to = "ajaysai119@gmail.com"
                sendEmail(to, content)
                speak("your email has been sent successfully")
            except Exception as e:
                print(e)
                speak("my dear friend I am unable to sent the mail...")
                "please address the error"
